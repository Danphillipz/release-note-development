trigger:
  batch: true
  branches:
    include:
      - main

variables:
  - name: version_major
    value: "1"
  - name: version_minor
    value: "0"
  - name: isMergeBuild
    value: ${{ and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), or(eq(variables['Build.Reason'], 'BatchedCI'),eq(variables['Build.Reason'], 'IndividualCI'))) }}
  - name: isPullRequest
    value: ${{ eq(variables['Build.Reason'], 'PullRequest') }}
  - name: enable_release_note_generation
    value: true

parameters:
  - name: include
    type: string
    default: " "
    displayName: Test tags to include
  - name: exclude
    type: string
    default: "blocked"
    displayName: Test tags to exclude
  - name: environment
    type: string
    values:
      - local
    default: local
    displayName: Environment to execute against
  - name: customOptions
    type: string
    default: " "
  - name: reason
    type: string
    values:
      - deployment
      - scheduled
      - manual
    default: manual

resources:
  repositories:
    - repository: wiki
      type: git
      name: QA.wiki
      ref: wikiMaster

stages:

  - stage: "Test"
    displayName: "Run playwright tests"
    dependsOn: [ ]
    jobs:
      - job: "Test"
        strategy:
          matrix:
            chrome:
              browserName: "chrome"
        workspace:
          clean: outputs | resources
        timeoutInMinutes: 180
        steps:
          - script: |
              if [ "$(isPullRequest)" == "True" ] && [ "${{ parameters.include }}" == " " ]; then
                testTagValue="Smoke"
              else
                testTagValue="${{ parameters.include }}"
              fi
              echo "##vso[task.setvariable variable=testTag]$testTagValue"

              echo "Using test tags:"
              echo "Include: $testTagValue"
              echo "Exclude: ${{ parameters.exclude }}"
            displayName: "Set tests to run"

  - stage: BuildNumber
    condition: and(succeededOrFailed(), eq(variables.isMergeBuild, 'true'))
    dependsOn:
      - Test
    jobs:
      - job: SetBuildNumber
        displayName: Set Build Number
        variables:
          version_revision: $[counter(format('{0}-{1}',variables['version_major'], variables['version_minor']), 0)]
          version: $(version_major).$(version_minor).$(version_revision)
        steps:
          - checkout: none
          - task: CmdLine@2
            displayName: Update Build Number
            inputs:
              script: |
                echo '##vso[build.updatebuildnumber]$(version)';

  - template: release-notes/publish-release-notes.yml
    parameters:
      enable: ${{ variables['enable_release_note_generation'] }}
      runCondition: succeeded('Test')
      dependsOnStages:
        - Test
      environment: development